name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Linting
        run: |
          ./ci/lint.sh

  commit-message:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set commit message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "commit_message=${COMMIT_MSG}" >> $GITHUB_ENV
          
      - name: Debug commit message
        run: |
          echo "The latest commit message is : $commit_message"
          
      - name: Validate commit message
        run: |
          ./ci/check_commits.sh "$commit_message"

  tests:
    runs-on: ubuntu-latest
    needs: commit-message
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Setup dataset
        run: |
          set -e
          make setup-dataset
          
      - name: Train model
        run: |
          set -e
          make train
          
      - name: Create necessary directories
        run: |
          mkdir -p models/fhe_files
          mkdir -p src/fhe_file
          
      - name: Run server in background
        run: |
          set -e
          nohup make run_server > server.log 2>&1 &
          echo "Waiting for server to start..."
          sleep 15
          for i in {1..30}; do
            if curl -s http://0.0.0.0:8000/docs > /dev/null; then
              echo "Server is up!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Server failed to start"
              cat server.log
              exit 1
            fi
            echo "Waiting for server... attempt $i"
            sleep 1
          done
          
      - name: Run client in background
        run: |
          set -e
          nohup make run_client > client.log 2>&1 &
          echo "Waiting for client to start..."
          sleep 15
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8001/docs > /dev/null; then
              echo "Client is up!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Client failed to start"
              cat client.log
              exit 1
            fi
            echo "Waiting for client... attempt $i"
            sleep 1
          done
          
      - name: Run tests
        run: |
          set -e
          make test || (echo "Tests failed! Server log:" && cat server.log && echo "Client log:" && cat client.log && exit 1)

  run-notebooks:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test Jupyter notebooks
        run: |
          make setup-dataset
          set -e
          for notebook in $(find . -name "*.ipynb"); do
            echo "Executing $notebook"
            jupyter nbconvert --to notebook --execute --ExecutePreprocessor.allow_errors=False --inplace "$notebook"
          done

  # build-documentation:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.10'
  #
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #
  #     - name: Build documentation
  #       run: |
  #         cd docsource
  #         make html
  #
  #     - name: Upload documentation artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: documentation
  #         path: docsource/build/html
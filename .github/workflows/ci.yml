name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Replace with the desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Installs your project's dependencies, including flake8

      - name: Run Linting
        run: |
          ./ci/lint.sh

  commit-message:
    runs-on: ubuntu-latest
    needs: lint  # This job depends on the lint job passing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set commit message
        run: |
          # Gets the latest commit message and replaces newlines with spaces
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "commit_message=${COMMIT_MSG}" >> $GITHUB_ENV

      - name: Debug commit message
        run: |
          echo "The latest commit message is : $commit_message"

      - name: Validate commit message
        run: |
          ./ci/check_commits.sh "$commit_message"

  run-notebooks:
    runs-on: ubuntu-latest
    needs: commit-message

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test Jupyter notebooks
        run: |
          make setup-dataset
          set -e
          for notebook in $(find . -name "*.ipynb"); do
            echo "Executing $notebook"
            jupyter nbconvert --to notebook --execute --ExecutePreprocessor.allow_errors=False --inplace "$notebook"
          done
          
  # build-documentation:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Build documentation
  #       run: |
  #         cd docsource
  #         make html

  #     - name: Upload documentation artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: documentation
  #         path: docsource/build/html